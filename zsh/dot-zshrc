# Enable Powerlevel10k instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#!/bin/zsh

# Load environment variables from ~/.env if the file exists
if [ -f ~/.env ]; then
  export $(cat ~/.env | xargs)
fi


### Added by Zinit's installer
ZINIT_DIR="$HOME/.local/share/zinit"
ZINIT_HOME="$ZINIT_DIR/zinit.git"
if [[ ! -f $ZINIT_HOME/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$ZINIT_DIR" && command chmod g-rwX "$ZINIT_DIR"
    command git clone https://github.com/zdharma-continuum/zinit "$ZINIT_HOME" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$ZINIT_HOME/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

### End of Zinit's installer chunk

# Load .zsh_pre if available
zinit is-snippet for \
    if"[[ -f $HOME/.zsh_pre ]]" $HOME/.zsh_pre \
    $HOME/.dotrc/config.zsh \

ZSH_THEME="robbyrussell"

#####################
# PROMPT            #
#####################

# Commented out light-mode plugin for now to prevent errors
zinit lucid light-mode from"gh-r" as"command" bpick'*apple-darwin.tar.gz' for \
   atload'eval "$(starship init zsh)"'    \
   starship/starship \

#####################
# PROGRAMS          #
#####################

zinit ice bpick'*macos-arm64*' for jqlang/jq
zinit wait lucid for lukechilds/zsh-nvm

zinit pack for ls_colors
zinit ice bpick'*apple-darwin*' \
    atload'eval "$(snm env zsh)"; alias n="snm"' \
    mv'snm* -> snm' pick'snm/snm' for @numToStr/snm

zinit ice bpick'*apple-darwin*' \
    atload'eval "$(zoxide init --no-aliases zsh)"; alias z="__zoxide_z"' \
    pick'zoxide/zoxide' for @ajeetdsouza/zoxide

zinit ice bpick'*darwin_arm64*' for @junegunn/fzf

zinit ice bpick'rg/rg' mv'ripgrep* -> rg' for @BurntSushi/ripgrep

zinit ice bpick'fd/fd' mv'fd* -> fd' for @sharkdp/fd

zinit ice bpick'bat/bat' mv'bat* -> bat' \
    atload'export MANPAGER="bat --plain"' for @sharkdp/bat

zinit ice bpick'delta/delta' mv'delta* -> delta' for @dandavison/delta

# zinit ice bpick'*macos*' atload'alias l="exa -abghHlS --git --group-directories-first"' \
#     pick'bin/exa' for @ogham/exa
#
zinit ice bpick'*macos-aarch64*' for @JohnnyMorganz/StyLua

zinit ice bpick'gitui-mac.tar.gz' for @extrawurst/gitui


zinit ice bpick'*.tar.gz' atinit'export PATH="$HOME/.yarn/bin:$PATH"' \
    mv'yarn* -> yarn' pick"yarn/bin/yarn" for yarnpkg/yarn \

##########################
# OMZ Libs and Plugins   #
##########################

setopt promptsubst

zinit wait lucid for \
	OMZL::clipboard.zsh \
	OMZL::compfix.zsh \
	OMZL::completion.zsh \
	OMZL::correction.zsh \
    atload'
        alias ..="cd .."
        alias ...="cd ../.."
        alias ....="cd ../../.."
        alias .....="cd ../../../.."

        function take() {
            mkdir -p $@ && cd ${@:$#}
        }

        alias rm="rm -rf"
    ' \
	OMZL::directories.zsh \
	OMZL::git.zsh \
	OMZL::grep.zsh \
	OMZL::key-bindings.zsh \
	OMZL::spectrum.zsh \
	OMZL::functions.zsh \
	OMZL::termsupport.zsh \
    atload"
        alias gcd='git checkout dev'
        alias gce='git commit -a -e'
    " \
	OMZP::git \
  djui/alias-tips \
  https://github.com/junegunn/fzf/blob/master/shell/key-bindings.zsh \
  https://github.com/junegunn/fzf/blob/master/shell/completion.zsh \
    hlissner/zsh-autopair \
    chriskempson/base16-shell \
	OMZP::fzf \

#####################
# PLUGINS           #
#####################
# @source: https://github.com/crivotz/dot_files/blob/master/linux/zplugin/zshrc

# IMPORTANT:
# These plugins should be loaded after ohmyzsh plugins
zinit wait lucid for \
    reset \
    zdharma-continuum/fast-syntax-highlighting \
    trapd00r/LS_COLORS

#####################
# MANUAL CONFIG     #
#####################

zinit wait'0a' lucid is-snippet for \
    $HOME/.dotrc/extra/*.zsh \
    if"[[ -f $HOME/.localrc ]]" $HOME/.localrc

PATH=~/.console-ninja/.bin:$PATH

eval "$(fnm env)"

autoload -Uz compinit
compinit

# bun completions
[ -s "/Users/jb/.bun/_bun" ] && source "/Users/jb/.bun/_bun"
